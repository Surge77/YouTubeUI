
.thumbnail {
  width: 100%;
  display: block;
}

.video-title {
  font-weight: 500;
  display: inline-block;
  margin-top: 0;
  line-height: 20px;
  margin-bottom: 10px;
}

/* A div container */
/* .video-preview {
  width: 300px;
  display: inline-block;
  vertical-align: top;
  margin-right: 15px;
} */

.video-info-grid {
  display: grid;
  grid-template-columns: 50px 1fr;
}

.profile-picture {
  width: 36px;
  border-radius: 50px;
}

.thumbnail-row {
  margin-bottom: 8px;
  position: relative;
}

.video-author,
.video-stats {
  font-size: 12px;
  color: rgb(96, 96, 96)
}

.video-author {
  margin-bottom: 6px;
}

.video-grid{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  column-gap: 15px;
  row-gap: 35px;
}

/* TO make the website responsive  we use media queries
Media queries in CSS are used to create responsive designs that adjust the appearance of a webpage based on the deviceâ€™s screen size, resolution, or other characteristics. They allow web pages to adapt dynamically to different screen sizes, ensuring a better user experience on mobile, tablets, and desktops.*/

@media (max-width: 750px){
  .video-grid{
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 750px) and (min-width: 999px){
  .video-grid{
    grid-template-columns: 1fr 1fr 1fr;
  }
}


@media (min-width: 1000px){
  .video-grid{
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}

.video-time{

  background-color: black;
  color: white;
  position: absolute;
  bottom:8px;
  right: 5px;
  padding: 4px;
  border-radius: 2px;
  font-weight: 500;
  font-size: 12px;
  /* instead of giving padding to all the four sides just give the shorthand property like padding 
  padding : 4px 4px 4px 4px
  padding: top right bottom left
  It goes like clockwise direction
  margin property works in the same way*/
  
}